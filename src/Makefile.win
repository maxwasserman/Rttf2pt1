CC = `"$(R_HOME)/bin/R" CMD config CC`
CFLAGS = `"$(R_HOME)/bin/R" CMD config CFLAGS`

# Makeconf is not sourced for Makefile.win
include $(R_HOME)/etc/$(R_ARCH)/Makeconf

# Forcing 32 bit fails on gcc-4.9.3 so we remove it if COMPILED_BY is set
ifeq ($(strip $(COMPILED_BY)),)
ARCH = -m32
endif

# Make setup flags for Freetype 2. These settings are used on the first run
# of "make", to set up the options for the the second run of make, which
# does the compiling. These settings are needed to convince it that it is
# running on a normal Unix-like system, because otherwise it will think
# that it's running on a normal Windows system, but it won't compile
# correctly.
FT2_MAKE_SETUP_FLAGS = PLATFORM=ansi CONFIG_FILE=ansi.mk std_setup
# CFLAGS for freetype. Need -c to not run linker (otherwise it doesn't compile)
FT2_CFLAGS = $(CFLAGS) $(ARCH) -DWINDOWS -c

# CFLAGS for ttf2pt1
# Also add the definitions for CFLAGS_FT and LIBS_FT from ttf2pt1's Makefile
# Also disable a bunch of warnings because they cause problems with R CMD check
# as of R 3.1.1

TTF2PT1_CFLAGS = $(CFLAGS) $(ARCH) -DWINDOWS -DUSE_FREETYPE -I../freetype2/include \
  -Wno-comment -Wno-format -Wno-logical-op-parentheses -Wno-pointer-sign \
  -Wno-unused-function -Wno-unused-variable -Wno-parentheses \
  -Wno-unused-label -Wno-maybe-uninitialized -Wno-unused-but-set-variables \
  -Wno-unused-value
# Linker flags for ttf2pt1
TTF2PT1_LIBS_FT = -L../freetype2/objs -lfreetype

# Run make in subdirs
all:
	echo "make in freetype2/ ..."
	(cd freetype2; $(MAKE) CC="$(CC)" $(FT2_MAKE_SETUP_FLAGS); $(MAKE) CC="$(CC)" CFLAGS="$(FT2_CFLAGS)")
	echo "make ttf2pt1 in ttf2pt1/ ..."
	(cd ttf2pt1; $(MAKE) CC="$(CC)" CFLAGS="$(TTF2PT1_CFLAGS)" LIBS_FT="$(TTF2PT1_LIBS_FT)" ttf2pt1)

clean:
	echo "make distclean in freetype2/ ..."
	(cd freetype2; $(MAKE) distclean)
	echo "make veryclean in ttf2pt1/ ..."
	(cd ttf2pt1; $(MAKE) veryclean)
